apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- .Values.commonLabels | toYaml | nindent 4 }}
    {{- range $key, $value := .Values.daemonSet.metadata.labels }}
    {{ $key }}: {{ $value }}
    {{- end }}
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.daemonSet.updateStrategy.maxUnavailable }}
  selector:
    matchLabels:
      {{- range $key, $value := .Values.daemonSet.spec.selector.matchLabels }}
      {{ $key }}: {{ $value }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- .Values.commonLabels | toYaml | nindent 8 }}
        {{- range $key, $value := .Values.daemonSet.template.metadata.labels }}
        {{ $key }}: {{ $value }}
        {{- end }}
      annotations:
        {{- range $key, $value := .Values.daemonSet.template.metadata.annotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      priorityClassName: {{ .Values.daemonSet.template.priorityClassName }}
      serviceAccountName: {{ .Values.daemonSet.template.serviceAccountName }}
      hostNetwork: true
      dnsPolicy: Default  # Don't use cluster DNS.
      tolerations:
        {{- toYaml .Values.daemonSet.template.tolerations | nindent 8 }}
      containers:
        - name: node-cache
          image: {{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              cpu: {{ .Values.daemonSet.container.resources.requests.cpu }}
              memory: {{ .Values.daemonSet.container.resources.requests.memory }}
            {{- if .Values.daemonSet.container.resources.limits.cpu }}
            limits:
              cpu: {{ .Values.daemonSet.container.resources.limits.cpu }}
              memory: {{ .Values.daemonSet.container.resources.limits.memory }}
            {{- end }}
          args:
            {{- range .Values.daemonSet.container.args }}
            - '{{ . }}'
            {{- end }}
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          ports:
            {{- range .Values.daemonSet.container.ports }}
            - containerPort: {{ .containerPort }}
              name: {{ .name }}
              protocol: {{ .protocol }}
            {{- end }}
          livenessProbe:
            httpGet:
              host: {{ .Values.daemonSet.container.livenessProbe.host }}
              path: /health
              port: 8080
            initialDelaySeconds: {{ .Values.daemonSet.container.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.daemonSet.container.livenessProbe.timeoutSeconds }}
          readinessProbe:
            {{- toYaml .Values.daemonSet.container.readinessProbe | nindent 12 }}
          volumeMounts:
            - mountPath: /run/xtables.lock
              name: xtables-lock
              readOnly: false
            - name: config-volume
              mountPath: /etc/coredns
            - name: kube-dns-config
              mountPath: /etc/kube-dns
      volumes:
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
        - name: kube-dns-config
          configMap:
            name: kube-dns
            optional: true
        - name: config-volume
          configMap:
            name: node-local-dns
            items:
              - key: Corefile
                path: Corefile.base
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}

        